{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","glitchedWriter.js"],"names":["regeneratorRuntime","require","putEasing","p","random","min","max","mathFunc","easing","Math","w","stringWithoutRepeat","string","Set","reduce","set","l","GlitchedWriter","htmlElement","settings","steps","delay","state","getPreset","prevWrongSettings","el","text","endEvent","CustomEvent","detail","typing","stop","Promise","resolve","finished","restarting","restart","element","description","outerHTML","textTable","accualWrite","preset","presets","default","nier","normal","Boolean","handleLetter","instantErase","i","newL","dMin","dMax","firstDelay","dFirstMin","dFirstMax","isFirst","char","loop","timeout","ghosts","setTimeout","getClitchChar","slice","maxGhosts","ghostProb","renderText","after","ghostsProbability","className","leadingChar","startText","randomSteps","glitches","glitchesFromString","textContent","combineGlitches","filter","map","classList","add","forEach","getTextToRender","charAtTheEnd","onTyping","stringFromTextTable","total","output","setAttribute","length","lastMatching","last","toLowerCase","beginSplice","oneAtATime","splice","results","from","push","promiseList","all","c","result","every","r","remove","dispatchEvent","write","glitchWrite","setGlitchedWriter","module","exports"],"mappings":";AAOA,IAAA,EAAA,SAAA,GACA,aAEA,IAEA,EAFA,EAAA,OAAA,UACA,EAAA,EAAA,eAEA,EAAA,mBAAA,OAAA,OAAA,GACA,EAAA,EAAA,UAAA,aACA,EAAA,EAAA,eAAA,kBACA,EAAA,EAAA,aAAA,gBAEA,SAAA,EAAA,EAAA,EAAA,EAAA,GAEA,IAAA,EAAA,GAAA,EAAA,qBAAA,EAAA,EAAA,EACA,EAAA,OAAA,OAAA,EAAA,WACA,EAAA,IAAA,EAAA,GAAA,IAMA,OAFA,EAAA,QAkMA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAEA,OAAA,SAAA,EAAA,GACA,GAAA,IAAA,EACA,MAAA,IAAA,MAAA,gCAGA,GAAA,IAAA,EAAA,CACA,GAAA,UAAA,EACA,MAAA,EAKA,OAAA,IAMA,IAHA,EAAA,OAAA,EACA,EAAA,IAAA,IAEA,CACA,IAAA,EAAA,EAAA,SACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,CACA,GAAA,IAAA,EAAA,SACA,OAAA,GAIA,GAAA,SAAA,EAAA,OAGA,EAAA,KAAA,EAAA,MAAA,EAAA,SAEA,GAAA,UAAA,EAAA,OAAA,CACA,GAAA,IAAA,EAEA,MADA,EAAA,EACA,EAAA,IAGA,EAAA,kBAAA,EAAA,SAEA,WAAA,EAAA,QACA,EAAA,OAAA,SAAA,EAAA,KAGA,EAAA,EAEA,IAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,WAAA,EAAA,KAAA,CAOA,GAJA,EAAA,EAAA,KACA,EACA,EAEA,EAAA,MAAA,EACA,SAGA,MAAA,CACA,MAAA,EAAA,IACA,KAAA,EAAA,MAGA,UAAA,EAAA,OACA,EAAA,EAGA,EAAA,OAAA,QACA,EAAA,IAAA,EAAA,OA1QA,CAAA,EAAA,EAAA,GAEA,EAcA,SAAA,EAAA,EAAA,EAAA,GACA,IACA,MAAA,CAAA,KAAA,SAAA,IAAA,EAAA,KAAA,EAAA,IACA,MAAA,GACA,MAAA,CAAA,KAAA,QAAA,IAAA,IAhBA,EAAA,KAAA,EAoBA,IAAA,EAAA,iBACA,EAAA,iBACA,EAAA,YACA,EAAA,YAIA,EAAA,GAMA,SAAA,KACA,SAAA,KACA,SAAA,KAIA,IAAA,EAAA,GACA,EAAA,GAAA,WACA,OAAA,MAGA,IAAA,EAAA,OAAA,eACA,EAAA,GAAA,EAAA,EAAA,EAAA,MACA,GACA,IAAA,GACA,EAAA,KAAA,EAAA,KAGA,EAAA,GAGA,IAAA,EAAA,EAAA,UACA,EAAA,UAAA,OAAA,OAAA,GAQA,SAAA,EAAA,GACA,CAAA,OAAA,QAAA,UAAA,QAAA,SAAA,GACA,EAAA,GAAA,SAAA,GACA,OAAA,KAAA,QAAA,EAAA,MAoCA,SAAA,EAAA,GAgCA,IAAA,EAgCA,KAAA,QA9BA,SAAA,EAAA,GACA,SAAA,IACA,OAAA,IAAA,QAAA,SAAA,EAAA,IAnCA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GACA,GAAA,UAAA,EAAA,KAEA,CACA,IAAA,EAAA,EAAA,IACA,EAAA,EAAA,MACA,OAAA,GACA,iBAAA,GACA,EAAA,KAAA,EAAA,WACA,QAAA,QAAA,EAAA,SAAA,KAAA,SAAA,GACA,EAAA,OAAA,EAAA,EAAA,IACA,SAAA,GACA,EAAA,QAAA,EAAA,EAAA,KAIA,QAAA,QAAA,GAAA,KAAA,SAAA,GAIA,EAAA,MAAA,EACA,EAAA,IACA,SAAA,GAGA,OAAA,EAAA,QAAA,EAAA,EAAA,KAvBA,EAAA,EAAA,KAiCA,CAAA,EAAA,EAAA,EAAA,KAIA,OAAA,EAaA,EAAA,EAAA,KACA,EAGA,GACA,KA+GA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,SAAA,EAAA,QACA,GAAA,IAAA,EAAA,CAKA,GAFA,EAAA,SAAA,KAEA,UAAA,EAAA,OAAA,CAEA,GAAA,EAAA,SAAA,SAGA,EAAA,OAAA,SACA,EAAA,IAAA,EACA,EAAA,EAAA,GAEA,UAAA,EAAA,QAGA,OAAA,EAIA,EAAA,OAAA,QACA,EAAA,IAAA,IAAA,UACA,kDAGA,OAAA,EAGA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,KAEA,GAAA,UAAA,EAAA,KAIA,OAHA,EAAA,OAAA,QACA,EAAA,IAAA,EAAA,IACA,EAAA,SAAA,KACA,EAGA,IAAA,EAAA,EAAA,IAEA,OAAA,EAOA,EAAA,MAGA,EAAA,EAAA,YAAA,EAAA,MAGA,EAAA,KAAA,EAAA,QAQA,WAAA,EAAA,SACA,EAAA,OAAA,OACA,EAAA,IAAA,GAUA,EAAA,SAAA,KACA,GANA,GA3BA,EAAA,OAAA,QACA,EAAA,IAAA,IAAA,UAAA,oCACA,EAAA,SAAA,KACA,GAoDA,SAAA,EAAA,GACA,IAAA,EAAA,CAAA,OAAA,EAAA,IAEA,KAAA,IACA,EAAA,SAAA,EAAA,IAGA,KAAA,IACA,EAAA,WAAA,EAAA,GACA,EAAA,SAAA,EAAA,IAGA,KAAA,WAAA,KAAA,GAGA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,YAAA,GACA,EAAA,KAAA,gBACA,EAAA,IACA,EAAA,WAAA,EAGA,SAAA,EAAA,GAIA,KAAA,WAAA,CAAA,CAAA,OAAA,SACA,EAAA,QAAA,EAAA,MACA,KAAA,OAAA,GA8BA,SAAA,EAAA,GACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,GACA,GAAA,EACA,OAAA,EAAA,KAAA,GAGA,GAAA,mBAAA,EAAA,KACA,OAAA,EAGA,IAAA,MAAA,EAAA,QAAA,CACA,IAAA,GAAA,EAAA,EAAA,SAAA,IACA,OAAA,EAAA,EAAA,QACA,GAAA,EAAA,KAAA,EAAA,GAGA,OAFA,EAAA,MAAA,EAAA,GACA,EAAA,MAAA,EACA,EAOA,OAHA,EAAA,MAAA,EACA,EAAA,MAAA,EAEA,GAGA,OAAA,EAAA,KAAA,GAKA,MAAA,CAAA,KAAA,GAIA,SAAA,IACA,MAAA,CAAA,MAAA,EAAA,MAAA,GA+MA,OAxmBA,EAAA,UAAA,EAAA,YAAA,EACA,EAAA,YAAA,EACA,EAAA,GACA,EAAA,YAAA,oBAYA,EAAA,oBAAA,SAAA,GACA,IAAA,EAAA,mBAAA,GAAA,EAAA,YACA,QAAA,IACA,IAAA,GAGA,uBAAA,EAAA,aAAA,EAAA,QAIA,EAAA,KAAA,SAAA,GAUA,OATA,OAAA,eACA,OAAA,eAAA,EAAA,IAEA,EAAA,UAAA,EACA,KAAA,IACA,EAAA,GAAA,sBAGA,EAAA,UAAA,OAAA,OAAA,GACA,GAOA,EAAA,MAAA,SAAA,GACA,MAAA,CAAA,QAAA,IAsEA,EAAA,EAAA,WACA,EAAA,UAAA,GAAA,WACA,OAAA,MAEA,EAAA,cAAA,EAKA,EAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,IAAA,EACA,EAAA,EAAA,EAAA,EAAA,IAGA,OAAA,EAAA,oBAAA,GACA,EACA,EAAA,OAAA,KAAA,SAAA,GACA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAuKA,EAAA,GAEA,EAAA,GAAA,YAOA,EAAA,GAAA,WACA,OAAA,MAGA,EAAA,SAAA,WACA,MAAA,sBAkCA,EAAA,KAAA,SAAA,GACA,IAAA,EAAA,GACA,IAAA,IAAA,KAAA,EACA,EAAA,KAAA,GAMA,OAJA,EAAA,UAIA,SAAA,IACA,KAAA,EAAA,QAAA,CACA,IAAA,EAAA,EAAA,MACA,GAAA,KAAA,EAGA,OAFA,EAAA,MAAA,EACA,EAAA,MAAA,EACA,EAQA,OADA,EAAA,MAAA,EACA,IAsCA,EAAA,OAAA,EAMA,EAAA,UAAA,CACA,YAAA,EAEA,MAAA,SAAA,GAcA,GAbA,KAAA,KAAA,EACA,KAAA,KAAA,EAGA,KAAA,KAAA,KAAA,MAAA,EACA,KAAA,MAAA,EACA,KAAA,SAAA,KAEA,KAAA,OAAA,OACA,KAAA,IAAA,EAEA,KAAA,WAAA,QAAA,IAEA,EACA,IAAA,IAAA,KAAA,KAEA,MAAA,EAAA,OAAA,IACA,EAAA,KAAA,KAAA,KACA,OAAA,EAAA,MAAA,MACA,KAAA,GAAA,IAMA,KAAA,WACA,KAAA,MAAA,EAEA,IACA,EADA,KAAA,WAAA,GACA,WACA,GAAA,UAAA,EAAA,KACA,MAAA,EAAA,IAGA,OAAA,KAAA,MAGA,kBAAA,SAAA,GACA,GAAA,KAAA,KACA,MAAA,EAGA,IAAA,EAAA,KACA,SAAA,EAAA,EAAA,GAYA,OAXA,EAAA,KAAA,QACA,EAAA,IAAA,EACA,EAAA,KAAA,EAEA,IAGA,EAAA,OAAA,OACA,EAAA,IAAA,KAGA,EAGA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,EAAA,EAAA,WAEA,GAAA,SAAA,EAAA,OAIA,OAAA,EAAA,OAGA,GAAA,EAAA,QAAA,KAAA,KAAA,CACA,IAAA,EAAA,EAAA,KAAA,EAAA,YACA,EAAA,EAAA,KAAA,EAAA,cAEA,GAAA,GAAA,EAAA,CACA,GAAA,KAAA,KAAA,EAAA,SACA,OAAA,EAAA,EAAA,UAAA,GACA,GAAA,KAAA,KAAA,EAAA,WACA,OAAA,EAAA,EAAA,iBAGA,GAAA,GACA,GAAA,KAAA,KAAA,EAAA,SACA,OAAA,EAAA,EAAA,UAAA,OAGA,CAAA,IAAA,EAMA,MAAA,IAAA,MAAA,0CALA,GAAA,KAAA,KAAA,EAAA,WACA,OAAA,EAAA,EAAA,gBAUA,OAAA,SAAA,EAAA,GACA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,EAAA,QAAA,KAAA,MACA,EAAA,KAAA,EAAA,eACA,KAAA,KAAA,EAAA,WAAA,CACA,IAAA,EAAA,EACA,OAIA,IACA,UAAA,GACA,aAAA,IACA,EAAA,QAAA,GACA,GAAA,EAAA,aAGA,EAAA,MAGA,IAAA,EAAA,EAAA,EAAA,WAAA,GAIA,OAHA,EAAA,KAAA,EACA,EAAA,IAAA,EAEA,GACA,KAAA,OAAA,OACA,KAAA,KAAA,EAAA,WACA,GAGA,KAAA,SAAA,IAGA,SAAA,SAAA,EAAA,GACA,GAAA,UAAA,EAAA,KACA,MAAA,EAAA,IAcA,MAXA,UAAA,EAAA,MACA,aAAA,EAAA,KACA,KAAA,KAAA,EAAA,IACA,WAAA,EAAA,MACA,KAAA,KAAA,KAAA,IAAA,EAAA,IACA,KAAA,OAAA,SACA,KAAA,KAAA,OACA,WAAA,EAAA,MAAA,IACA,KAAA,KAAA,GAGA,GAGA,OAAA,SAAA,GACA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,EAAA,aAAA,EAGA,OAFA,KAAA,SAAA,EAAA,WAAA,EAAA,UACA,EAAA,GACA,IAKA,MAAA,SAAA,GACA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,EAAA,SAAA,EAAA,CACA,IAAA,EAAA,EAAA,WACA,GAAA,UAAA,EAAA,KAAA,CACA,IAAA,EAAA,EAAA,IACA,EAAA,GAEA,OAAA,GAMA,MAAA,IAAA,MAAA,0BAGA,cAAA,SAAA,EAAA,EAAA,GAaA,OAZA,KAAA,SAAA,CACA,SAAA,EAAA,GACA,WAAA,EACA,QAAA,GAGA,SAAA,KAAA,SAGA,KAAA,IAAA,GAGA,IAQA,EAvrBA,CA8rBA,iBAAA,OAAA,OAAA,QAAA,IAGA,IACA,mBAAA,EACA,MAAA,GAUA,SAAA,IAAA,yBAAA,CAAA;;AC/XA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,GAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GArVA,IAAMA,EAAqBC,QAAQ,uBAE7BC,EAAY,SAAAC,GAAKA,OAAAA,EAAIA,EAAIA,GAEzBC,EAAS,SAACC,EAAKC,GAAKC,IAAAA,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KAAMC,EAAS,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GAC/CL,EAAIM,KAAKL,SAEPM,GADNP,EAAIK,EAASN,EAAUC,GAAKA,IACbG,EAAMD,GAAOA,EACrBE,OAAY,MAAZA,EAAmBG,EAAID,KAAKF,GAAUG,IAGxCC,EAAsB,SAAAC,GAC3B,OAAA,EAAI,IAAIC,IAAQD,EAAAA,KAAUE,OAAO,SAACC,EAAKC,GAAMD,OAAAA,EAAMC,KAE9CC,EAuUN,WA/QaC,SAAAA,EAAAA,EAAaC,GAAU,IAAA,EAAA,KAAA,EAAA,KAAA,GAwDf,EAAA,KAAA,oBAAA,WAACA,IAAAA,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAKA,SACpCA,EAASC,MAAM,GAAKX,KAAKJ,IAAIc,EAASC,MAAM,GAAID,EAASC,MAAM,IAC/DD,EAASE,MAAM,GAAKZ,KAAKJ,IAAIc,EAASE,MAAM,GAAIF,EAASE,MAAM,MAzD1DC,KAAAA,MAAQL,EAAeK,MAEvBH,KAAAA,SACDF,EAAAA,GAAAA,EAAeE,SACf,GAAA,KAAKI,UAAUJ,GACfA,GAAAA,GAECK,KAAAA,oBACAC,KAAAA,GAAKP,EACLQ,KAAAA,KAAO,GACPC,KAAAA,SAAW,IAAIC,YAAY,cAAe,CAAEC,OAAQ,OAoQ3D,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAjQOH,MAAAA,SAAAA,EAAMP,GAEP,OADCO,KAAAA,KAAOA,EACR,KAAKJ,MAAMQ,QACTC,KAAAA,MAAK,GACHC,QAAQC,QAAQ,CACtBC,UAAU,EACVC,WAAY,KAAKb,MAAMc,QACvBC,QAAS,KAAKZ,GACdC,KAAM,KAAKA,KACXY,YAAgB,GAAA,OAAA,KAAKb,GAAGc,UAAyB,iBAAA,OAAA,KAAKb,KALhC,KAMtBc,UAAW,KAAKA,cAGblB,KAAAA,MAAMS,MAAO,EAClBZ,EACI,EAAA,GAAA,KAAKA,SACL,GAAA,KAAKI,UAAUJ,GACfA,GAAAA,GAECK,KAAAA,kBAAkBL,GAChB,KAAKsB,YAAYtB,MA6O1B,CAAA,IAAA,YA1OWA,MAAAA,SAAAA,GACL,IAACA,EAAU,MAAO,GAClBuB,IAAAA,EAAS,GACLvB,OAAAA,EAASuB,QACX,IAAA,UACJA,EAASzB,EAAe0B,QAAQC,QAChC,MACI,IAAA,OACJF,EAASzB,EAAe0B,QAAQE,KAChC,MACI,IAAA,SACJH,EAASzB,EAAe0B,QAAQG,OAK3BJ,OAAAA,IA0NT,CAAA,IAAA,OAlNMN,MAAAA,SAAAA,GAEA,GADCd,KAAAA,MAAMc,QAAUW,QAAQX,GACzB,KAAKd,MAAMS,KAAM,OAAO,EACvBT,KAAAA,MAAMS,MAAO,IA+MpB,CAAA,IAAA,cAAA,MAAA,WAAA,IAAA,EAAA,EA5MmBZ,EAAAA,KAAAA,SAAAA,EAAAA,GA+IR6B,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EA6DX,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAjIGC,GAoEQD,EAAaE,SAAAA,EAAGC,GACD9B,IAAAA,EAAAA,EAAAA,GAAlB+B,EADyB,EAAA,GACnBC,EADmB,EAAA,GAEGlC,EAAAA,EAAAA,EAASmC,YAArCC,EAFyB,EAAA,GAEdC,EAFc,EAAA,GAG1BC,EAAU,EAQP,MAPM,KAATN,IACHC,GAAQ,IACRC,GAAQ,IACRE,GAAa,EACbC,GAAa,GAGP,IAAIxB,QAAQ,SAAAC,GACZyB,IAAAA,EAAOlB,EAAUU,IAGdS,SAAAA,IACFC,IAAAA,EACLxD,EAAOgD,EAAMC,GACbjD,EAAOmD,EAAWC,EAAW,MAAM,GAAQC,EAC5CA,EAAU,EAENC,GAAAA,EAAK1C,IAAMmC,GAAwB,KAAhBO,EAAKG,OAG3B,OAFAH,EAAKtC,MAAQ,OACba,GAAQ,GAGLX,GAAAA,EAAMS,KAET,YADAE,GAAQ,GAGT6B,WAAW,WACVJ,EAAKtC,QAELsC,EAAK1C,EACJ0C,EAAKtC,OAAS,GAAKsC,EAAK1C,IAAMmC,EAC3BA,EACAY,EAAcL,EAAK1C,GAEnB0C,EAAK1C,IAAMmC,GAAwB,KAAhBO,EAAKG,OAC3BH,EAAKG,OAASH,EAAKG,OAAOG,MAAM,GAAI,GAC5BC,EAAY,GAAKxD,KAAKL,SAAW8D,IACzCR,EAAKG,QAAUE,IACfE,KAGDE,IAEAR,KACEC,GAnCJD,MA3JMjC,EAAoB,KAApBA,KAAMD,EAAc,KAAdA,GAAIH,EAAU,KAAVA,MACjB8C,EAAQ,EAAI1C,IAAS,CAAC,KAErBN,EAOGD,EAPHC,MACAC,EAMGF,EANHE,MACmB6C,EAKhB/C,EALHkD,kBACAC,EAIGnD,EAJHmD,UACAC,EAGGpD,EAHHoD,YACAtB,EAEG9B,EAFH8B,aACAuB,EACGrD,EADHqD,UAEDC,EAAc,WAAMrE,OAAAA,EAAOgB,EAAM,GAAIA,EAAM,GAAI,UAC/CsD,EAAWvD,EAASwD,mBACjBhE,EACAe,EACCD,EAAGmD,aACFzD,EAAS0D,gBAAkB1D,EAASuD,SAAW,KAEjDvD,EAASuD,UACRvD,EAAS0D,gBAAkB,KAAK1D,SAASuD,SAAW,IAEnDT,EAAc9C,EAAd8C,UAEDzB,KAAAA,WACJ,KAAKA,WACL,EAAIf,EAAGmD,aACLE,OAAO,SAAA9D,GAAKA,MAAM,OAANA,IACZ+D,IAAI,SAAA/D,GAAM,MAAA,CACVA,EAAAA,EACA6C,OAAQ,OAETkB,IAAI,SAAArB,GACFA,OAAAA,EAAAA,GAAAA,EADM,CAETtC,MAAOqD,QAGAjC,EAAc,KAAdA,UAERlB,EAAMQ,QAAS,EACfL,EAAGuD,UAAUC,IAAIX,GAEjB9B,EAAU0C,QAAQ,SAACxB,EAAMR,GAAOV,OAAAA,EAAUU,GAAG9B,MAAQqD,MAE/CU,EAAkB,WAChBC,IAAAA,GAAgBb,EAAYc,UAChC/D,EAAMQ,OAELyC,EAAYb,KACZ,GAKI4B,OAJqB9C,EAAU1B,OACrC,SAACyE,EAAD,GAA2BA,OAAAA,GAAjBvE,EAAAA,EAAG6C,EAAAA,SACb,KAE6BU,EAAca,EAAe,KAE5DjB,EAAa,WACNqB,IAAAA,EAASL,IACf1D,EAAGmD,YAAcY,EACjB/D,EAAGgE,aAAa,sBAAuBD,IAExCzB,EAAgB,SAAA/C,GACf0D,OAAAA,EAAWA,EAAStE,EAAO,EAAGsE,EAASgB,OAAQ,UAAY1E,GAAK,IACjE2E,EAAevB,EAAMtD,OACpB,SAAC8E,EAAM5E,EAAGkC,GACTA,OAAAA,EAAIV,EAAUkD,QACdE,IAAS1C,EAAI,GACblC,EAAE6E,gBAAkBrD,EAAUU,GAAGlC,EAAE6E,cAChC3C,EACA0C,IACH,GAEFE,EAAc3E,EAAS4E,WAAavD,EAAUkD,OAASC,EAAe,EAGtE1C,IACe,iBAAduB,GAA8C,eAAdA,GAChC,CAEQtB,IAAAA,EADwB,eAAdsB,EAA6B,EAAImB,EAAe,EAC1CzC,EAAIV,EAAUkD,OAAQxC,IAAKV,EAAUU,GAAGlC,EAAI,GACrEmD,IAGM3B,KAAAA,EAAUkD,OAAStB,EAAMsB,QAC/BlD,EAAUwD,OAAO5F,EAAO0F,EAAatD,EAAUkD,OAAQ,SAAU,EAAG,CACnE1E,EAAG,GACHI,MAAOqD,IACPZ,OAAQ,KAEHrB,KAAAA,EAAUkD,OAAStB,EAAMsB,QAC/BtB,EAAM4B,OAAO5F,EAAO0F,EAAa1B,EAAMsB,OAAQ,SAAU,EAAG,IAK5D,GAHKO,EAAU,GAGdhD,GACc,iBAAduB,GAA8C,eAAdA,EADjC,CA6GH,EAAA,KAAA,GAAA,MAzGOrD,GADE+E,EAAqB,iBAAd1B,EAA+BmB,GAAgB,GACxDxE,EAAS4E,WAAAA,CAyGhB,EAAA,KAAA,GAAA,MAxGa7C,EAAIkB,EAAMsB,OAAS,EAwGhC,KAAA,GAxGmCxC,KAAAA,EAAIgD,GAAAA,CAwGvC,EAAA,KAAA,GAAA,MAvGwBlD,OAAnBiD,EAAAA,GAAAA,EAuGL,EAAA,KAAA,GAvGwBjD,EAAaE,EAAG,IAuGxC,KAAA,GAAA,EAAA,GAAA,EAAA,KAvGaiD,EAAAA,GAAAA,KAAAA,KAAAA,EAAAA,GAAAA,EAAAA,IACR3D,EAAUU,GAAG9B,MAAQqD,IAsG1B,KAAA,GAxG6CvB,IAwG7C,EAAA,KAAA,GAAA,MAAA,KAAA,GAAA,EAAA,KAAA,GAAA,MAAA,KAAA,GAhG2BlB,OAHjBoE,EAAchC,EAClBJ,MAAMkC,EAAO,GACbnB,IAAI,SAAC/D,EAAGkC,GAAMF,OAAAA,EAAaE,EAAG,MAChC+C,EAAAA,GAAAA,EAAQE,KAARF,EAAAA,GAAAA,EAgGJ,EAAA,GAAA,EAAA,EAAA,KAAA,GAhG2BjE,QAAQqE,IAAID,GAgGvC,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,MAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IA/FI5D,EAAU0C,QAAQ,SAACoB,EAAGpD,GAAOV,OAAAA,EAAUU,GAAG9B,MAAQqD,MA+FtD,KAAA,GA5FMtD,IAAAA,EAAS4E,WAAAA,CA4Ff,EAAA,KAAA,GAAA,MA1FiB3B,EAAAA,GAAAA,EAAAA,KAAAA,GA0FjB,KAAA,GAAA,IAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,KAAA,GAAA,MA1F2CpB,OAA/BE,EAAAA,EAAAA,GAAAA,MAAY+C,EAAAA,GAAAA,EA0FxB,EAAA,KAAA,GA1F2CjD,EAAaE,EAAGkB,EAAMlB,IA0FjE,KAAA,GAAA,EAAA,IAAA,EAAA,KA1FgCiD,EAAAA,GAAAA,KAAAA,KAAAA,EAAAA,GAAAA,EAAAA,KA0FhC,EAAA,KAAA,GAAA,MAAA,KAAA,GAAA,EAAA,KAAA,GAAA,MAAA,KAAA,GAvF0BnE,OADjBoE,EAAchC,EAAMW,IAAI,SAAC/D,EAAGkC,GAAMF,OAAAA,EAAaE,EAAGlC,KACxDiF,EAAAA,IAAAA,EAAQE,KAARF,EAAAA,IAAAA,EAuFH,EAAA,IAAA,EAAA,EAAA,KAAA,GAvF0BjE,QAAQqE,IAAID,GAuFtC,KAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,MAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,KAAA,GA5EMG,GARAA,EAASN,EAAQO,MAAM,SAAAC,GAAKA,OAAAA,IAE1BtE,EAAab,EAAMc,QACzBd,EAAMc,SAAU,EAChBd,EAAMQ,QAAS,EACfL,EAAGuD,UAAU0B,OAAOpC,GACpBH,KAEIoC,GAAWpE,EAAAA,CA4EjB,EAAA,KAAA,GAAA,MAjEUoE,OAVPA,EAAS,CACRrE,SAAUqE,EACVpE,WAAAA,EACAE,QAAS,KAAKZ,GACdC,KAAAA,EACAY,YAAgB,GAAA,OAAA,KAAKb,GAAGc,UAAqBb,aAAAA,OAAAA,EALrC,KAMRc,UAAAA,GAEIA,KAAAA,UAAY,KACjBf,EAAGkF,cAAc,KAAKhF,UACf4E,EAAAA,OAAAA,SAAAA,GAiEV,KAAA,GA/DS,OAAA,EAAA,OAAA,SAAA,KAAKK,MAAM,KAAKlF,KAAMP,IA+D/B,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,SAAA,OAAA,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,MAAA,EAAA,GAvUMF,EAAAA,EACU,QAAA,CACdc,MAAM,EACND,QAAQ,EACRM,SAAS,IAJLnB,EAAAA,EAMa,WAAA,CACjBG,MAAO,CAAC,EAAG,GACXC,MAAO,CAAC,IAAK,KACbiC,WAAY,CAAC,EAAG,MAChBe,kBAAmB,GACnBJ,UAAW,EACXS,SACC,gkBACDC,oBAAoB,EACpBoB,YAAY,EACZvB,UAAW,WACXvB,cAAc,EACd4B,iBAAiB,EACjBP,UAAW,iBACXC,YAAa,CACZb,KAAM,GACN2B,UAAU,KAtBPpE,EAAAA,EAyBY,UAAA,CAChB2B,QA1BI3B,EAAAA,GAAAA,EA0BeE,UACnB0B,KAAM,CACLxB,MAAO,CAAC,GAAI,IACZiC,WAAY,CAAC,EAAG,GAChBlC,MAAO,CAAC,EAAG,GACX6C,UAAW,EACXS,SACC,mPACDqB,YAAY,EACZvB,UAAW,aACXvB,cAAc,EACd4B,iBAAiB,EACjBF,oBAAoB,EACpBJ,aAAa,GAEdzB,OAAQ,CACPzB,MAAO,CAAC,GAAI,KACZiC,WAAY,CAAC,EAAG,GAChByC,YAAY,EACZ9B,UAAW,EACXO,UAAW,eACXvB,cAAc,EACd7B,MAAO,CAAC,EAAG,GACXmD,YAAa,CACZb,KAAM,IACN2B,UAAU,MA8Qd,IAAMwB,EAAc,SAAC3F,EAAaN,EAAQO,GACzC,OAAA,IAAIF,EAAeC,EAAaC,GAAUyF,MAAMhG,IAE3CkG,EAAoB,SAAC5F,EAAaC,GACvC,OAAA,IAAIF,EAAeC,EAAaC,IAEjC4F,OAAOC,QAAU,CAAEF,kBAAAA,EAAmBD,YAAAA","file":"glitchedWriter.min.js","sourceRoot":"","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","const regeneratorRuntime = require('regenerator-runtime')\r\n\r\nconst putEasing = p => p * p * p\r\n\r\nconst random = (min, max, mathFunc = null, easing = false) => {\r\n\tlet p = Math.random()\r\n\tp = easing ? putEasing(p) : p\r\n\tconst w = p * (max - min) + min\r\n\treturn mathFunc == null ? w : Math[mathFunc](w)\r\n}\r\n\r\nconst stringWithoutRepeat = string =>\r\n\t[...new Set([...string])].reduce((set, l) => set + l)\r\n\r\nclass GlitchedWriter {\r\n\tstatic state = {\r\n\t\tstop: false,\r\n\t\ttyping: false,\r\n\t\trestart: false,\r\n\t}\r\n\tstatic settings = {\r\n\t\tsteps: [0, 6],\r\n\t\tdelay: [140, 400],\r\n\t\tfirstDelay: [0, 1700],\r\n\t\tghostsProbability: 0.1,\r\n\t\tmaxGhosts: 7,\r\n\t\tglitches:\r\n\t\t\t'ABCDĐEFGHIJKLMNOPQRSTUVWXYZabcdđefghijklmnopqrstuvwxyzĄąĆćŻżŹźŃńóŁłАБВГҐДЂЕЁЄЖЗЅИІЇЙЈКЛЉМНЊОПРСТЋУЎФХЦЧЏШЩЪЫЬЭЮЯабвгґдђеёєжзѕиіїйјклљмнњопрстћуўфхцчџшщъыьэюяΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρστυφχψωάΆέΈέΉίϊΐΊόΌύΰϋΎΫΏĂÂÊÔƠƯăâêôơư一二三四五六七八九十百千上下左右中大小月日年早木林山川土空田天生花草虫犬人名女男子目耳口手足見音力気円入出立休先夕本文字学校村町森正水火玉王石竹糸貝車金雨赤青白数多少万半形太細広長点丸交光角計直線矢弱強高同親母父姉兄弟妹自友体毛頭顔首心時曜朝昼夜分週春夏秋冬今新古間方北南東西遠近前後内外場地国園谷野原里市京風雪雲池海岩星室戸家寺通門道話言答声聞語読書記紙画絵図工教晴思考知才理算作元食肉馬牛魚鳥羽鳴麦米茶色黄黒来行帰歩走止活店買売午汽弓回会組船明社切電毎合当台楽公引科歌刀番用何ĂÂÊÔƠƯăâêôơư1234567890‘?’“!”(%)[#]{@}/&<-+÷×=>$€£¥¢:;,.* •°·…±†‡æ«»¦¯—–~˜¨_øÞ¿▬▭▮▯┐└╛╟╚╔╘╒╓┘┌░▒▓○‼',\r\n\t\tglitchesFromString: false,\r\n\t\toneAtATime: false,\r\n\t\tstartText: 'previous',\r\n\t\tinstantErase: false,\r\n\t\tcombineGlitches: false,\r\n\t\tclassName: 'glitch-writing',\r\n\t\tleadingChar: {\r\n\t\t\tchar: '',\r\n\t\t\tonTyping: false,\r\n\t\t},\r\n\t}\r\n\tstatic presets = {\r\n\t\tdefault: { ...this.settings },\r\n\t\tnier: {\r\n\t\t\tdelay: [40, 80],\r\n\t\t\tfirstDelay: [0, 0],\r\n\t\t\tsteps: [3, 7],\r\n\t\t\tmaxGhosts: 0,\r\n\t\t\tglitches:\r\n\t\t\t\t'一二三四五六七八九十百千上下左右中大小月日年早木林山川土空田天生花草虫犬人名女男子目耳口手足見音力気円入出立休先夕本文字学校村町森正水火玉王石竹糸貝車金雨赤青白数多少万半形太細広長点丸交光角計直線矢弱強高同親母父姉兄弟妹自友体毛頭顔首心時曜朝昼夜分週春夏秋冬今新古間方北南東西遠近前後内外場地国園谷野原里市京風雪雲池海岩星室戸家寺通門道話言答声聞語読書記紙画絵図工教晴思考知才理算作元食肉馬牛魚鳥羽鳴麦米茶色黄黒来行帰歩走止活店買売午汽弓回会組船明社切電毎合当台楽公引科歌刀番用何',\r\n\t\t\toneAtATime: true,\r\n\t\t\tstartText: 'eraseWhole',\r\n\t\t\tinstantErase: false,\r\n\t\t\tcombineGlitches: true,\r\n\t\t\tglitchesFromString: true,\r\n\t\t\tleadingChar: false,\r\n\t\t},\r\n\t\tnormal: {\r\n\t\t\tdelay: [80, 230],\r\n\t\t\tfirstDelay: [0, 0],\r\n\t\t\toneAtATime: true,\r\n\t\t\tmaxGhosts: 0,\r\n\t\t\tstartText: 'matchingOnly',\r\n\t\t\tinstantErase: false,\r\n\t\t\tsteps: [0, 0],\r\n\t\t\tleadingChar: {\r\n\t\t\t\tchar: '_',\r\n\t\t\t\tonTyping: true,\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n\r\n\tconstructor(htmlElement, settings) {\r\n\t\tthis.state = GlitchedWriter.state\r\n\r\n\t\tthis.settings = {\r\n\t\t\t...GlitchedWriter.settings,\r\n\t\t\t...this.getPreset(settings),\r\n\t\t\t...settings,\r\n\t\t}\r\n\t\tthis.prevWrongSettings()\r\n\t\tthis.el = htmlElement\r\n\t\tthis.text = ''\r\n\t\tthis.endEvent = new CustomEvent('glitchWrote', { detail: this })\r\n\t}\r\n\r\n\twrite(text, settings) {\r\n\t\tthis.text = text\r\n\t\tif (this.state.typing) {\r\n\t\t\tthis.stop(true)\r\n\t\t\treturn Promise.resolve({\r\n\t\t\t\tfinished: false,\r\n\t\t\t\trestarting: this.state.restart,\r\n\t\t\t\telement: this.el,\r\n\t\t\t\ttext: this.text,\r\n\t\t\t\tdescription: `${this.el.outerHTML} is typing: \"${this.text}\"`,\r\n\t\t\t\ttextTable: this.textTable,\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.state.stop = false\r\n\t\tsettings = {\r\n\t\t\t...this.settings,\r\n\t\t\t...this.getPreset(settings),\r\n\t\t\t...settings,\r\n\t\t}\r\n\t\tthis.prevWrongSettings(settings)\r\n\t\treturn this.accualWrite(settings)\r\n\t}\r\n\r\n\tgetPreset(settings) {\r\n\t\tif (!settings) return {}\r\n\t\tlet preset = {}\r\n\t\tswitch (settings.preset) {\r\n\t\t\tcase 'default':\r\n\t\t\t\tpreset = GlitchedWriter.presets.default\r\n\t\t\t\tbreak\r\n\t\t\tcase 'nier':\r\n\t\t\t\tpreset = GlitchedWriter.presets.nier\r\n\t\t\t\tbreak\r\n\t\t\tcase 'normal':\r\n\t\t\t\tpreset = GlitchedWriter.presets.normal\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\treturn preset\r\n\t}\r\n\r\n\tprevWrongSettings = (settings = this.settings) => {\r\n\t\tsettings.steps[0] = Math.min(settings.steps[0], settings.steps[1])\r\n\t\tsettings.delay[0] = Math.min(settings.delay[0], settings.delay[1])\r\n\t}\r\n\r\n\tstop(restart) {\r\n\t\tthis.state.restart = Boolean(restart)\r\n\t\tif (this.state.stop) return false\r\n\t\tthis.state.stop = true\r\n\t}\r\n\r\n\tasync accualWrite(settings) {\r\n\t\tconst { text, el, state } = this,\r\n\t\t\tafter = [...text] || [' '],\r\n\t\t\t{\r\n\t\t\t\tsteps,\r\n\t\t\t\tdelay,\r\n\t\t\t\tghostsProbability: ghostProb,\r\n\t\t\t\tclassName,\r\n\t\t\t\tleadingChar,\r\n\t\t\t\tinstantErase,\r\n\t\t\t\tstartText,\r\n\t\t\t} = settings,\r\n\t\t\trandomSteps = () => random(steps[0], steps[1], 'floor'),\r\n\t\t\tglitches = settings.glitchesFromString\r\n\t\t\t\t? stringWithoutRepeat(\r\n\t\t\t\t\t\ttext +\r\n\t\t\t\t\t\t\tel.textContent +\r\n\t\t\t\t\t\t\t(settings.combineGlitches ? settings.glitches : ''),\r\n\t\t\t\t  )\r\n\t\t\t\t: settings.glitches +\r\n\t\t\t\t  (settings.combineGlitches ? this.settings.glitches : '')\r\n\r\n\t\tlet { maxGhosts } = settings\r\n\r\n\t\tthis.textTable = (\r\n\t\t\tthis.textTable ||\r\n\t\t\t[...el.textContent]\r\n\t\t\t\t.filter(l => l !== '\\n')\r\n\t\t\t\t.map(l => ({\r\n\t\t\t\t\tl,\r\n\t\t\t\t\tghosts: '',\r\n\t\t\t\t}))\r\n\t\t).map(char => ({\r\n\t\t\t...char,\r\n\t\t\tsteps: randomSteps(),\r\n\t\t}))\r\n\r\n\t\tconst { textTable } = this\r\n\r\n\t\tstate.typing = true\r\n\t\tel.classList.add(className)\r\n\r\n\t\ttextTable.forEach((char, i) => (textTable[i].steps = randomSteps()))\r\n\r\n\t\tconst getTextToRender = () => {\r\n\t\t\t\tconst charAtTheEnd = (leadingChar.onTyping\r\n\t\t\t\t? state.typing\r\n\t\t\t\t: true)\r\n\t\t\t\t\t? leadingChar.char\r\n\t\t\t\t\t: ''\r\n\t\t\t\tconst stringFromTextTable = textTable.reduce(\r\n\t\t\t\t\t(total, { l, ghosts }) => (total += l + ghosts),\r\n\t\t\t\t\t'',\r\n\t\t\t\t)\r\n\t\t\t\treturn stringFromTextTable + (leadingChar ? charAtTheEnd : '')\r\n\t\t\t},\r\n\t\t\trenderText = () => {\r\n\t\t\t\tconst output = getTextToRender()\r\n\t\t\t\tel.textContent = output\r\n\t\t\t\tel.setAttribute('data-decrypted-text', output)\r\n\t\t\t},\r\n\t\t\tgetClitchChar = l =>\r\n\t\t\t\tglitches ? glitches[random(0, glitches.length, 'floor')] : l || '',\r\n\t\t\tlastMatching = after.reduce(\r\n\t\t\t\t(last, l, i) =>\r\n\t\t\t\t\ti < textTable.length &&\r\n\t\t\t\t\tlast === i - 1 &&\r\n\t\t\t\t\tl.toLowerCase() === textTable[i].l.toLowerCase()\r\n\t\t\t\t\t\t? i\r\n\t\t\t\t\t\t: last,\r\n\t\t\t\t-1,\r\n\t\t\t),\r\n\t\t\tbeginSplice = settings.oneAtATime ? textTable.length : lastMatching + 1\r\n\r\n\t\tif (\r\n\t\t\tinstantErase &&\r\n\t\t\t(startText === 'matchingOnly' || startText === 'eraseWhole')\r\n\t\t) {\r\n\t\t\tconst startIndex = startText === 'eraseWhole' ? 0 : lastMatching + 1\r\n\t\t\tfor (let i = startIndex; i < textTable.length; i++) textTable[i].l = ''\r\n\t\t\trenderText()\r\n\t\t}\r\n\r\n\t\twhile (textTable.length < after.length)\r\n\t\t\ttextTable.splice(random(beginSplice, textTable.length, 'floor'), 0, {\r\n\t\t\t\tl: '',\r\n\t\t\t\tsteps: randomSteps(),\r\n\t\t\t\tghosts: '',\r\n\t\t\t})\r\n\t\twhile (textTable.length > after.length)\r\n\t\t\tafter.splice(random(beginSplice, after.length, 'floor'), 0, '')\r\n\r\n\t\tconst results = []\r\n\r\n\t\tif (\r\n\t\t\t!instantErase &&\r\n\t\t\t(startText === 'matchingOnly' || startText === 'eraseWhole')\r\n\t\t) {\r\n\t\t\tconst from = startText === 'matchingOnly' ? lastMatching : -1\r\n\t\t\tif (settings.oneAtATime) {\r\n\t\t\t\tfor (let i = after.length - 1; i > from; i--) {\r\n\t\t\t\t\tresults.push(await handleLetter(i, ''))\r\n\t\t\t\t\ttextTable[i].steps = randomSteps()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst promiseList = after\r\n\t\t\t\t\t.slice(from + 1)\r\n\t\t\t\t\t.map((l, i) => handleLetter(i, ''))\r\n\t\t\t\tresults.push(...(await Promise.all(promiseList)))\r\n\t\t\t\ttextTable.forEach((c, i) => (textTable[i].steps = randomSteps()))\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (settings.oneAtATime) {\r\n\t\t\t// eslint-disable-next-line\r\n\t\t\tfor (let i in after) results.push(await handleLetter(i, after[i]))\r\n\t\t} else {\r\n\t\t\tconst promiseList = after.map((l, i) => handleLetter(i, l))\r\n\t\t\tresults.push(...(await Promise.all(promiseList)))\r\n\t\t}\r\n\r\n\t\tlet result = results.every(r => r)\r\n\r\n\t\tconst restarting = state.restart\r\n\t\tstate.restart = false\r\n\t\tstate.typing = false\r\n\t\tel.classList.remove(className)\r\n\t\trenderText()\r\n\t\t// && this.text === getTextToRender()\r\n\t\tif (result && !restarting) {\r\n\t\t\tresult = {\r\n\t\t\t\tfinished: result,\r\n\t\t\t\trestarting,\r\n\t\t\t\telement: this.el,\r\n\t\t\t\ttext,\r\n\t\t\t\tdescription: `${this.el.outerHTML} types: \"${text}\"`,\r\n\t\t\t\ttextTable,\r\n\t\t\t}\r\n\t\t\tthis.textTable = null\r\n\t\t\tel.dispatchEvent(this.endEvent)\r\n\t\t\treturn result\r\n\t\t}\r\n\t\treturn this.write(this.text, settings)\r\n\r\n\t\tfunction handleLetter(i, newL) {\r\n\t\t\tlet [dMin, dMax] = [...delay]\r\n\t\t\tlet [dFirstMin, dFirstMax] = [...settings.firstDelay]\r\n\t\t\tlet isFirst = 1\r\n\t\t\tif (newL === '') {\r\n\t\t\t\tdMin /= 1.5\r\n\t\t\t\tdMax /= 1.5\r\n\t\t\t\tdFirstMin /= 2\r\n\t\t\t\tdFirstMax /= 2\r\n\t\t\t}\r\n\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\tconst char = textTable[i]\r\n\t\t\t\tloop()\r\n\r\n\t\t\t\tfunction loop() {\r\n\t\t\t\t\tconst timeout =\r\n\t\t\t\t\t\trandom(dMin, dMax) +\r\n\t\t\t\t\t\trandom(dFirstMin, dFirstMax, null, true) * isFirst\r\n\t\t\t\t\tisFirst = 0\r\n\r\n\t\t\t\t\tif (char.l === newL && char.ghosts === '') {\r\n\t\t\t\t\t\tchar.steps = 0\r\n\t\t\t\t\t\tresolve(true)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (state.stop) {\r\n\t\t\t\t\t\tresolve(false)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tchar.steps--\r\n\r\n\t\t\t\t\t\tchar.l =\r\n\t\t\t\t\t\t\tchar.steps <= 0 || char.l === newL\r\n\t\t\t\t\t\t\t\t? newL\r\n\t\t\t\t\t\t\t\t: getClitchChar(char.l)\r\n\r\n\t\t\t\t\t\tif (char.l === newL && char.ghosts !== '')\r\n\t\t\t\t\t\t\tchar.ghosts = char.ghosts.slice(0, -1)\r\n\t\t\t\t\t\telse if (maxGhosts > 0 && Math.random() < ghostProb) {\r\n\t\t\t\t\t\t\tchar.ghosts += getClitchChar()\r\n\t\t\t\t\t\t\tmaxGhosts--\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trenderText()\r\n\r\n\t\t\t\t\t\tloop()\r\n\t\t\t\t\t}, timeout)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst glitchWrite = (htmlElement, string, settings) =>\r\n\tnew GlitchedWriter(htmlElement, settings).write(string)\r\n\r\nconst setGlitchedWriter = (htmlElement, settings) =>\r\n\tnew GlitchedWriter(htmlElement, settings)\r\n\r\nmodule.exports = { setGlitchedWriter, glitchWrite }\r\n"]}